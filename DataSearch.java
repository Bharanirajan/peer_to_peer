/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lastversion;

import java.util.Collections;
import java.util.*;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import lastversion.DataSetup;



public class DataSearch extends javax.swing.JFrame {

    /**
     * Creates new form DataSearch
     */
    public String nearestVirtualIPtmp;
    public DataSearch() {
        initComponents();
    }
    int BinaryToDecimal(String binary)
    {
        //int binary=00000100000;
        int decimal=0;
        int power=0;
        int t =binary.length()-1;
        
        for(int i=t;i>=0;i--)
        {
            System.out.print(binary.charAt(i));
            int tmp=Integer.parseInt(String.valueOf((binary.charAt(i))));
                decimal+=tmp*Math.pow(2,power);
                
                power++;
            
        }        return decimal;
    }
    public static String xor(String p1,String p2)
        {
            StringBuilder sb = new StringBuilder();
            for(int i = 0; i < p1.length(); i++)
            sb.append((p1.charAt(i) ^ p2.charAt(i)));
            String result = sb.toString();
            System.out.println("\n"+result+"\n");
            return result;
        }

        public static String toBinary(final String ip)
        {
            int len      = ip.length();
            int addr     = 0;
            int fullAddr = 0;
            char [] out  = new char[32];

            // Parse the four segments of the IP address.
            for (int i = 0; i < len; i++) {
                char digit = ip.charAt(i);
                if (digit != '.') {
                    addr = addr * 10 + (digit - '0');
                } 
                else {
                        fullAddr = (fullAddr << 8) | addr;
                    addr = 0;
                }
            }
            fullAddr = (fullAddr << 8) | addr;

             // At this point, fullAddr holds the IP address as a 32-bit integer.
             for (int i = 0; i < 32; i++, fullAddr <<= 1)
                out[i] = ((fullAddr & 0x80000000) != 0) ? '1' : '0';
            
             return new String(out);
        }   
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("DATA SEARCH");

        jLabel2.setText("IP");

        jLabel3.setText("Data");

        jTextField1.setText("                ");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText("                 ");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Nearest Virtual IP");

        jTextField3.setText("                 ");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setText("VirtualIP");

        jButton2.setText("GetNearestIp");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(49, 49, 49))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel1)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        // TODO add your handling code here:
//            String binOfInputIp=toBinary(jTextField1.getText().trim());
//            int r=-1;
//            String nearestVirtualIP=null;
//            for(VirtualResponseNode vrNode : DataSetup.virtualResponseNodeObj)
//            {
//                System.out.println("in main node:" + vrNode.ip);
//                String binOfVNodeIP=toBinary(vrNode.ip);
//                //System.out.println(inputIPAddress + " " +vrNode.ip);
//                String xorValueNew=xor(binOfInputIp,binOfVNodeIP);
//                int d_val =Integer.parseInt(xorValueNew,2);
//                System.out.println(d_val+"\n");
//                if(r > d_val || r==-1)
//                {
//                    r=d_val;
//                    nearestVirtualIP=vrNode.ip;
//                }   
//            }
//            System.out.println("Nearest Virtual Node" + nearestVirtualIP);
//            jTextField3.setText(nearestVirtualIP);
            String nearestVirtualIP=null;
            Random r1 = new Random();
            int l = r1.nextInt(35 - 20) + 20;
            nearestVirtualIP=jComboBox1.getSelectedItem().toString();
            System.out.println("Selected IP in combo box:"+ nearestVirtualIP);
            //        jTextField3.getText().trim();
            for(VirtualResponseNode vrNode : DataSetup.virtualResponseNodeObj)
            {
                System.out.println("test:" + vrNode.ip + nearestVirtualIP);
                if(vrNode.ip.equals(nearestVirtualIP))
                {
                    Collections.sort(vrNode.infoObj,new InfoSort());
                    for(Info infoNode : vrNode.infoObj)
                    {
                        System.out.println("data"+infoNode.data +" "+infoNode.ip);
                    }
                    System.out.println("Enter the data to be searched");
                    int dataToBeSearched= Integer.parseInt(jTextField2.getText().trim());                   
                    Info temp=new Info("10", dataToBeSearched);
                    int index=0;
                    
                    boolean found=false;
                     for(Info infoNode : vrNode.infoObj)
                    {
                        if(dataToBeSearched==infoNode.data)
                        {
                            found=true;
                            break;
                        }
                        index++;
                        System.out.println("data after"+infoNode.data +" "+infoNode.ip);
                    }
           
           //         int index = Collections.binarySearch(vrNode.infoObj,temp,new Infotmp());
            //        for(Info info:)
                    String ip1=toBinary(nearestVirtualIP);
                    String ip2=toBinary(jTextField1.getText().trim());
                    String xorValueNew=xor(ip1,ip2).trim();
                    l=l/10;
                    //int val=Integer.parseInt(xorValueNew);
                    double decimal=BinaryToDecimal(xorValueNew);
                    double timeTaken;
                   
                    if(decimal == 0)
                    {
                        timeTaken=2;
                    }
                    else
                    {
                        timeTaken=(decimal/212)*l;
                    }
                    
                    if (found)
                    JOptionPane.showMessageDialog(null, "IP address : " + vrNode.infoObj.get(index).ip );//+ "  Time Complexity = " + timeTaken + "milli secs" + decimal
                    
                    else
                        JOptionPane.showMessageDialog(null,"Given data is not available!!!");
                    //jTextField2.setText(vrNode.infoObj.get(index).ip);
                    //System.out.println("Ip address"+ vrNode.infoObj.get(index).ip);
                    break;
                }
            }
            
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        jComboBox1.removeAllItems();
        for(int i=0;i< DataSetup.virtualResponseNodeObj.size();i++)
                {
                    VirtualResponseNode vrNode=DataSetup.virtualResponseNodeObj.get(i);
                    System.out.println("vrnode" + vrNode.ip);
                    jComboBox1.addItem(vrNode.ip);
                }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
            String binOfInputIp=toBinary(jTextField1.getText().trim());
            int r=-1;
            String nearestVirtualIP=null;
            for(VirtualResponseNode vrNode : DataSetup.virtualResponseNodeObj)
            {
                System.out.println("in main node:" + vrNode.ip);
                String binOfVNodeIP=toBinary(vrNode.ip);
                //System.out.println(inputIPAddress + " " +vrNode.ip);
                String xorValueNew=xor(binOfInputIp,binOfVNodeIP);
                int d_val =Integer.parseInt(xorValueNew,2);
                System.out.println(d_val+"\n");
                if(r > d_val || r==-1)
                {
                    r=d_val;
                    nearestVirtualIP=vrNode.ip;
                }   
            }
            System.out.println("Nearest Virtual Node" + nearestVirtualIP);
            jTextField3.setText(nearestVirtualIP);
            nearestVirtualIPtmp=nearestVirtualIP;
            //nearestVirtualIPtmp="gnanam";
            jComboBox1.setSelectedItem(nearestVirtualIPtmp);
            
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    void test()
    {
              
    }
    static double q=1;
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DataSearch ds=new DataSearch();
                ds.test();
                ds.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
